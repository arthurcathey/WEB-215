Types of functions:
built-in 
custom (named)

Parameters vs arguments

passing data between function

ways to define a function:
anonymous 
function expression
arrow function
IIFE
method
callback

document a function with DocBlock

Core JavaScript Terms

Variable â€“ A container for storing data (e.g., let name = "Arthur";).

Constant â€“ A variable that cannot change once assigned (const pi = 3.14;).

Data Types â€“ The kind of data stored, like:

string â†’ text ("hello")

number â†’ numbers (42, 3.14)

boolean â†’ true/false

null â†’ empty on purpose

undefined â†’ not yet assigned

object â†’ collections of key/value pairs

array â†’ list of items ([1, 2, 3])

ðŸ”¹ Operators

Arithmetic operators â†’ +, -, *, /, % (modulus/remainder).

Assignment operator â†’ =, +=, -=, etc.

Comparison operators â†’ ==, === (strict equal), !=, <, >.

Logical operators â†’ && (and), || (or), ! (not).

ðŸ”¹ Control Flow

If statement â€“ Runs code only if condition is true.

Else / else if â€“ Runs code if the first condition fails.

Switch â€“ Alternative to multiple if statements.

Loops â€“ Repeat code:

for loop (fixed number of times)

while loop (while condition is true)

forâ€¦of loop (goes through arrays)

ðŸ”¹ Functions

Function â€“ Reusable block of code. Example:

function greet(name) {
  return "Hello, " + name;
}


Parameters â€“ Inputs to a function.

Return â€“ Output from a function.

Arrow functions â€“ Shortcut syntax:

const add = (a, b) => a + b;

ðŸ”¹ Objects & Arrays

Object â€“ Stores data as key/value pairs.

let person = { name: "Arthur", age: 25 };


Array â€“ Stores ordered lists of items.

let colors = ["red", "green", "blue"];

ðŸ”¹ DOM (Document Object Model)

document â€“ Represents the HTML page.

Element â€“ A single item in the DOM (like <p> or <div>).

querySelector() â€“ Selects an element.

addEventListener() â€“ Lets you respond to clicks, keypresses, etc.

ðŸ”¹ General Concepts

Syntax â€“ The rules of writing code.

Debugging â€“ Finding and fixing errors.

Console â€“ A tool in the browser to see messages/errors (console.log).

Scope â€“ Where variables are accessible (global vs local).
